@page "/details/{EmpId:int}"
@using Employee.Models
@using Employee.Data
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager

<h3>Employee Details</h3>

@if (employeeDetails != null)
{
    <dl>
        <dt>Employee ID:</dt>
        <dd>@employeeDetails.EmpID</dd>
        <dt>Name:</dt>
        <dd>@employeeDetails.EName</dd>
        <dt>Department Name:</dt>
        <dd>@employeeDetails.DeptName</dd>
        <dt>Age:</dt>
        <dd>@employeeDetails.Age</dd>
        <dt>Salary:</dt>
        <dd>@employeeDetails.Salary</dd>
        <!-- Add more details as needed -->
    </dl>
}
else
{
    <p>Employee not found.</p>
}

@code {
    private GetEmployeeByResult? employeeDetails;

    [Parameter]
    public int EmpId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the employee details when the component is initialized
            employeeDetails = await EmployeeService.GetEmployeeDetailsAsync(EmpId);
        }
        catch (Exception ex)
        {
            // Handle the exception, for example, navigate to an error page
            Console.WriteLine($"Error fetching employee details: {ex.Message}");
        }
    }
}

